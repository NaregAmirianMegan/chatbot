{"ast":null,"code":"import _classCallCheck from \"/Users/nareg/Desktop/Git/react-practice/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nareg/Desktop/Git/react-practice/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nareg/Desktop/Git/react-practice/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nareg/Desktop/Git/react-practice/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nareg/Desktop/Git/react-practice/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nareg/Desktop/Git/react-practice/my-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: 15\n        },\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleIncrement(),\n        style: {\n          fontSize: 20\n        },\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? 'Zero' : count;\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"handleIncrement\",\n    value: function handleIncrement() {}\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/nareg/Desktop/Git/react-practice/my-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","fontSize","getBadgeClasses","formatCount","handleIncrement","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;6BAIE;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAA6B,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiE,KAAKC,WAAL,EAAjE,CADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKC,eAAL,EAAjB;AAAyC,QAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAE;AAAX,SAAhD;AAAgE,QAAA,SAAS,EAAC,0BAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;;kCAEc;AAAA,UACLD,KADK,GACK,KAAKD,KADV,CACLC,KADK;AAEb,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;sCAEkB;AACjB,UAAIK,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKN,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOK,OAAP;AACD;;;sCAEkB,CAElB;;;;EA3BmBR,S;;AA8BtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n  state = {\n    count: 0\n  };\n\n  render () {\n    return (\n      <div>\n        <span style={{fontSize: 15}} className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button onClick={this.handleIncrement()} style={{fontSize: 20}} className=\"btn btn-secondary btn-sm\">Increment</button>\n      </div>\n    );\n  }\n\n  formatCount () {\n    const { count } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n  getBadgeClasses () {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  handleIncrement () {\n\n  }\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}